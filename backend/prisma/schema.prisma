// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at") 

  email String @unique
  password String?
  isAdmin Boolean @default(false) @map("is_admin")

  userName String @unique @map("user_name") 
  firstName String  @map("first_name") 
  lastName String  @map("last_name") 
  phone String @default("")

  orders Order[]
}

model Product{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  productName String @unique @map("product_name")
  slug String @unique
  description String
  price Decimal
  images String[]
  
  category      Category?  @relation(fields: [categoryId], references: [id])
  categoryId    Int?       @map("category_id")
  productInfo   ProductInfo[]
}

model Category{
   id Int @id @default(autoincrement())
   createdAt DateTime @default(now()) @map("created_at")
   updatedAt DateTime @updatedAt @map("updated_at")

   categoryName String @unique @map("category_name")
   slug String @unique
   products Product[]
}

model ProductInfo {
  id Int @id @default(autoincrement())
  product      Product @relation(fields: [productId], references: [id])
  productId    Int @map("product_id")
  
  sizeName String  @db.VarChar(10) @map("size_name")
  amountStorage Int @map("amount_storage")

  orderItems OrderItem[]
}


model OrderItem{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  price Decimal
  quantity Int
  
  order      Order? @relation(fields: [orderId], references: [id])
  orderId    Int? @map("order_id")
  
  productInfo      ProductInfo? @relation(fields: [productInfoId], references: [id])
  productInfoId    Int? @map("product_info_id")
}
model Order{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  status String
  shipCountry String  @map("ship_country")
  shipCity String  @map("ship_city")
  shipRegion String  @map("ship_region")
  shipPostalCode String  @map("ship_postal_code")
  shipAdress String @map("ship_adress")
  orderDate DateTime @default(now()) @map("order_date")

  items OrderItem[]

  user User? @relation(fields: [userId], references: [id])
  userId Int? @map("user_id")
}